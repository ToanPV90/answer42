spring.application.name=answer42

# Server error configuration
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false
server.port=8080
# Disable persistent sessions - DEV=false, PROD=true, or remove it
server.servlet.session.persistent=false

# PostgreSQL Connection (Environment-aware)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:54322/postgres?ssl=false&sslmode=disable}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate Configuration (Environment-aware)
spring.jpa.properties.hibernate.default_schema=answer42
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Connection pool settings (Environment-aware)
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAXIMUM_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${HIKARI_MINIMUM_IDLE:5}
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1200000}
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED

# Logging Configuration
# Enable colored console output
spring.output.ansi.enabled=always
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5level) %clr(%property{PID}){magenta} --- %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} : %m%n

# File logging
logging.file.name=logs/answer42.log
logging.file.path=logs/
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Override specific logging levels (can be removed if using LoggingConfig.java)
# logging.level.com.samjdtechnologies.answer42=DEBUG
# logging.level.org.springframework.security=DEBUG
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# AI Configuration - needed for @Value annotations in AIConfig.java
spring.ai.anthropic.api-key=${ANTHROPIC_API_KEY:dummy-key}
spring.ai.anthropic.chat.options.model=claude-3-haiku-20240307
spring.ai.anthropic.chat.options.temperature=0.7
spring.ai.anthropic.chat.options.max-tokens=4000
# Production reliability configuration - Haiku is fastest and most reliable
spring.ai.anthropic.http.connect-timeout=120s
spring.ai.anthropic.http.read-timeout=600s
spring.ai.anthropic.http.write-timeout=120s
spring.ai.anthropic.http.max-connections=30
spring.ai.anthropic.http.max-connections-per-route=15
spring.ai.anthropic.http.keep-alive-duration=45s
spring.ai.anthropic.http.connection-pool-keep-alive=true

spring.ai.openai.base-url=https://api.openai.com
spring.ai.openai.api-key=${OPENAI_API_KEY:dummy-key}
spring.ai.openai.chat.completions-path=/chat/completions
spring.ai.openai.chat.options.model=gpt-3.5-turbo
spring.ai.openai.chat.options.temperature=0.7
spring.ai.openai.chat.options.max-completion-tokens=4000
# Production reliability configuration - gpt-3.5-turbo is most reliable for high-volume use
# 300s=5m, 1200s=20m, 300s=5m
spring.ai.openai.http.connect-timeout=300s
spring.ai.openai.http.read-timeout=1200s
spring.ai.openai.http.write-timeout=300s
spring.ai.openai.http.max-connections=25
spring.ai.openai.http.max-connections-per-route=10
spring.ai.openai.http.keep-alive-duration=30s
spring.ai.openai.http.connection-pool-keep-alive=true
# Reactor Netty timeout configurations for OpenAI (override Netty defaults)
spring.ai.openai.http.response-timeout=1200s
spring.ai.openai.http.socket-timeout=1200s

spring.ai.perplexity.api-key=${PERPLEXITY_API_KEY:dummy-key}
spring.ai.perplexity.base-url=https://api.perplexity.ai
spring.ai.perplexity.chat.completions-path=/chat/completions
spring.ai.perplexity.chat.options.model=sonar-pro
spring.ai.perplexity.chat.options.temperature=0.7
spring.ai.perplexity.chat.options.max-tokens=4000
# Extended timeouts for research operations - Perplexity can be very slow (30 minutes)
spring.ai.perplexity.http.connect-timeout=300s
spring.ai.perplexity.http.read-timeout=1800s
spring.ai.perplexity.http.write-timeout=300s
spring.ai.perplexity.http.max-connections=20
spring.ai.perplexity.http.max-connections-per-route=10
spring.ai.perplexity.http.keep-alive-duration=300s
spring.ai.perplexity.http.connection-pool-keep-alive=true
# Comprehensive Reactor Netty timeout configurations for Perplexity (override Netty defaults)
spring.ai.perplexity.http.response-timeout=1800s
spring.ai.perplexity.http.socket-timeout=1800s
spring.ai.perplexity.http.pending-acquire-timeout=300s
spring.ai.perplexity.http.pool-acquire-timeout=300s

# Ollama Local Processing Configuration (for fallback)
spring.ai.ollama.enabled=${OLLAMA_ENABLED:true}
spring.ai.ollama.base-url=${OLLAMA_BASE_URL:http://localhost:11434}
spring.ai.ollama.chat.options.model=${OLLAMA_MODEL:llama3.1:8b}
spring.ai.ollama.chat.options.temperature=0.7
spring.ai.ollama.chat.options.max-tokens=4000
# Extended timeouts for laptop - 30 minutes
spring.ai.ollama.timeout=1800000
spring.ai.ollama.http.connect-timeout=300s
spring.ai.ollama.http.read-timeout=1800s
spring.ai.ollama.http.write-timeout=300s
# Additional Reactor Netty timeout configurations for Ollama (override Netty defaults)
spring.ai.ollama.http.response-timeout=1800s
spring.ai.ollama.http.socket-timeout=1800s
# Spring Boot WebClient timeout overrides
spring.ai.ollama.http.max-connections=10
spring.ai.ollama.http.max-connections-per-route=5
spring.ai.ollama.http.keep-alive-duration=300s
spring.ai.ollama.http.connection-pool-keep-alive=true

# Fallback Configuration
spring.ai.fallback.enabled=${FALLBACK_ENABLED:true}
spring.ai.fallback.retry-after-failures=${FALLBACK_RETRY_AFTER_FAILURES:3}
spring.ai.fallback.timeout-seconds=${FALLBACK_TIMEOUT_SECONDS:60}
spring.ai.fallback.connection-check-timeout=${FALLBACK_CONNECTION_CHECK_TIMEOUT:5000}
spring.ai.fallback.health-check-interval=${FALLBACK_HEALTH_CHECK_INTERVAL:30000}

# Related Paper Discovery Configuration
discovery.enabled=${DISCOVERY_ENABLED:true}
discovery.semantic-scholar.api-key=${SEMANTIC_SCHOLAR_API_KEY:}
discovery.semantic-scholar.base-url=https://api.semanticscholar.org/graph/v1
discovery.crossref.base-url=https://api.crossref.org/works
discovery.max-papers-per-source=${DISCOVERY_MAX_PAPERS_PER_SOURCE:50}
discovery.cache.duration-hours=${DISCOVERY_CACHE_DURATION_HOURS:24}
discovery.rate-limit.enabled=${DISCOVERY_RATE_LIMIT_ENABLED:true}
discovery.rate-limit.crossref.requests-per-second=45
discovery.rate-limit.semantic-scholar.requests-per-minute=100
discovery.rate-limit.perplexity.requests-per-minute=10

# Vaadin Configuration
# vaadin.launch-browser=true
vaadin.closeIdleSessions=true
vaadin.heartbeatInterval=60
vaadin.productionMode=false
vaadin.compatibilityMode=false
vaadin.pnpm.enable=true
vaadin.devmode.threads-debug=true
vaadin.whitelisted-packages=com.vaadin,org.vaadin,com.samjdtechnologies
spring.servlet.multipart.enabled=true
vaadin.frontend.frontend.folder=src/main/frontend
# Fix WebSocket initialization timing issues
vaadin.servlet.close-idle-sessions=true
vaadin.servlet.heartbeat-interval=60
vaadin.push.suspend-timeout-longpolling=5000
vaadin.push.transport=websocket

# Thread management
spring.task.execution.shutdown.await-termination=true
spring.task.execution.shutdown.await-termination-period=20s
spring.task.execution.thread-name-prefix=answer42-exec-
spring.task.scheduling.shutdown.await-termination=true
spring.task.scheduling.shutdown.await-termination-period=20s
spring.task.scheduling.thread-name-prefix=answer42-sched-

# Multipart file upload configuration (Environment-aware)
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:50MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:60MB}
spring.servlet.multipart.file-size-threshold=2MB
upload.large-file-threshold=${LARGE_FILE_THRESHOLD:52428800}


# JWT Configuration
app.auth.jwt.secret=${JWT_SECRET:}
app.auth.jwt.expiration=86400000
app.auth.jwt.header=Authorization
app.auth.jwt.prefix=Bearer


management.metrics.export.logging.enabled=true
 # PT1M – every 1 minute 
# PT30S – every 30 seconds
# PT5M – every 5 minutes
# PT1H – every hour
# PT15S – every 15 seconds
management.metrics.export.logging.step=PT5M
management.metrics.export.logging.flush-interval=PT5M

# Spring Batch Configuration
# disable auto process jobs on startup
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=never
spring.batch.jdbc.table-prefix=answer42.BATCH_
